#!/usr/bin/env perl

use strict;
# use warnings::unused;
use warnings;
use diagnostics;
use Mail::IMAPClient;
use IO::Socket::SSL;
use MIME::EncWords;
use Mozilla::CA;
use FindBin;
use Config::Auto;

my $conf = File::Spec->catdir(
	$FindBin::Bin,
	File::Spec->updir(),
	'conf',
	'reporter',
);

my $config;

eval {
	$config = Config::Auto::parse($conf);
};
if($@) {
	die "Configuration error: $@ $conf";
}

my $server = $config->{yahoo}->{server};
my $user = $config->{yahoo}->{user};
my $password = $config->{yahoo}->{password};

my $imap = Mail::IMAPClient->new(Server => $server,
				User => $user,
				Password => $password,
				Ssl => 1,
				Socket => IO::Socket::SSL->new (
					Proto => 'tcp',
					PeerAddr => $server,
					PeerPort => 993,
					SSL_verify_mode => SSL_VERIFY_NONE,
					SSL_ca_file => Mozilla::CA::SSL_ca_file(),
				),
			) or
	die "Cannot connect to $server: $@";

# my $folders = $imap->folders or
	# die "List folders error: ", $imap->LastError, "\n";
# print "Folders: @$folders\n";

print_headers({ imap => $imap, folder => 'Bulk Mail' });
print_headers({ imap => $imap, folder => 'Junk' });

$imap->logout();

sub print_headers {
	my $params = shift;
	my $folder = $params->{'folder'};
	my $imap = $params->{'imap'};
 
	unless($imap->select($folder)) {
		warn "Select $folder error: ", $imap->LastError, "\n";
		return;
	}

	unless($imap->message_count) {
		$imap->close();
		return;
	}

	my @messages = $imap->messages($folder);

	my $nummessages = $#messages + 1;

	print "Showing subjects for $nummessages at $server\n";

	sub CATCH_PIPE { };
	$SIG{'PIPE'} = "CATCH_PIPE";

	foreach (@messages) {
		my %headers = %{$imap->parse_headers($_, 'To', 'Subject')};

		if($headers{'To'}) {
			print $headers{'To'}[0];
			print ': ';
		}
		if($headers{'Subject'}) {
			print scalar(MIME::EncWords::decode_mimewords($headers{'Subject'}[0]));
		}
		print "\n";
	}
	$imap->close();
}
